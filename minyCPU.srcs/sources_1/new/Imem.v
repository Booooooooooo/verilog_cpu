`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2019/01/06 14:23:21
// Design Name: 
// Module Name: Imem
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Imem(
    input clk,
    input rst,
    input en,
    input [15:0] Addr,
    output reg [15:0] IR
    );
    
    reg [15:0] Instra;
    
    initial
    begin
    IR = 16'b0000000000000000;
    Instra = 16'b0000000000000000;
    end
    
    always @(Addr)
    begin
        case(Addr)
        16'b0000000000000000: Instra = 16'b0000010000000101; //mov r0, 5;
        16'b0000000000000001: Instra = 16'b0000010010000000; //mov r1, 0;
        16'b0000000000000010: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000000011: Instra = 16'b0000010000001010; //mov r0, 10;
        16'b0000000000000100: Instra = 16'b0000010010000001; //mov r1, 1;
        16'b0000000000000101: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000000110: Instra = 16'b0000010000000000; //mov r0, 0;
        16'b0000000000000111: Instra = 16'b0000010010000010; //mov r1, 2;
        16'b0000000000001000: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000001001: Instra = 16'b0000010000000100; //mov r0, 4;
        16'b0000000000001010: Instra = 16'b0000010010000011; //mov r1, 3;
        16'b0000000000001011: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000001100: Instra = 16'b0000010000000001; //mov r0, 1;
        16'b0000000000001101: Instra = 16'b0000010010000100; //mov r1, 4;
        16'b0000000000001110: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000001111: Instra = 16'b0000010000000110; //mov r0, 6;
        16'b0000000000010000: Instra = 16'b0000010010000101; //mov r1, 5;
        16'b0000000000010001: Instra = 16'b0001000010000000; //sto r1, r0;
        
        16'b0000000000010010: Instra = 16'b0000010000000110; //mov r2, 6;
        16'b0000000000010011: Instra = 16'b0000010010000000; //mov r2, 6;
        16'b0000000000010100: Instra = 16'b0000010100000000; //mov r2, 0;
        16'b0000000000010101: Instra = 16'b0000010110000001; //mov r3, 1;
        16'b0000000000010110: Instra = 16'b0000001000110000; //mov r4, r3;
        16'b0000000000010111: Instra = 16'b0011001000000000; //dec r4;  
        16'b0000000000011000: Instra = 16'b0000101011000000; //lad r5, r4;
        16'b0000000000011001: Instra = 16'b0000101100110000; //lad r6, r3;
        16'b0000000000011010: Instra = 16'b0101001011100000; //cmp r5, r6;      
        16'b0000000000011011: Instra = 16'b1000001000100010; //JLS 34;
        16'b0000000000011100: Instra = 16'b0000001111010000; //mov r7, r5;
        16'b0000000000011101: Instra = 16'b0000001011100000; //mov r5, r6;
        16'b0000000000011110: Instra = 16'b0000001101110000; //mov r6, r7;
        16'b0000000000011111: Instra = 16'b0001001001010000; //sto r4, r5;
        16'b0000000000100000: Instra = 16'b0001000111100000; //sto r3, r6;
        16'b0000000000100001: Instra = 16'b0000010100000000; //mov r2, 0;
        16'b0000000000100010: Instra = 16'b0010100110000000; //inc r3;
        16'b0000000000100011: Instra = 16'b0101000110000000; //cmp r3, r0;  
        16'b0000000000100100: Instra = 16'b0111100000010110; //jlo 22;
        16'b0000000000100101: Instra = 16'b0000011110000001; //mov r7, 1;
        16'b0000000000100110: Instra = 16'b0010000001110000; //sub r0, r7;            
        16'b0000000000100111: Instra = 16'b0010001110100000; //sub r7, r2;  
        16'b0000000000101000: Instra = 16'b0000001101110000; //mov r2, r7;
        16'b0000000000101001: Instra = 16'b0110000000010101; //JNE 21;
        16'b0000000000101010: Instra = 16'b1111100000000000; //hlt;
        default: Instra = 16'b1111100000000000;
        endcase
    end
    
    always @(posedge clk)
    begin
        if(rst == 0) IR = 16'b0000000000000000;
        else
        begin
            if(en == 1) IR = Instra;
        end
    end
endmodule
